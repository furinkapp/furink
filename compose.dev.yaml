volumes:
    postgres-data:
    postgres-furink-data:
    mongo-data:
    typesense-data:
    minio-data:

services:
    # Postgres
    postgres-ssl-bootstrap:
        build:
            context: docker/postgres-ssl-bootstrap
            dockerfile: Dockerfile
        # don't auto restart, only needs to run when compose first goes up
        volumes:
            - postgres-furink-data:/var/lib/postgresql/furink
        restart: no

    postgres:
        image: postgres:16-alpine
        restart: on-failure
        env_file:
            - path: env/postgres.env.default
              required: true
            - path: env/postgres.env
              required: false
            - path: env/gorse.env.default
              required: true
            - path: env/gorse.env
              required: false
        command:
            - "-c"
            - "ssl=on"
            - "-c"
            - "ssl_cert_file=/var/lib/postgresql/furink/certs/postgres.crt"
            - "-c"
            - "ssl_key_file=/var/lib/postgresql/furink/certs/postgres.key"
            - "-c"
            - "ssl_ca_file=/var/lib/postgresql/furink/certs/furink.crt"
            - "-c"
            - "ssl_crl_file=/var/lib/postgresql/furink/certs/furink.crl"
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - postgres-furink-data:/var/lib/postgresql/furink
            - ./docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
        ports:
            - "5432:5432"
        depends_on:
            postgres-ssl-bootstrap:
                condition: service_completed_successfully

    redis:
        image: redis:7-alpine
        restart: on-failure
        ports:
            - "6379:6379"

    mongo:
        image: mongo:7
        restart: on-failure
        volumes:
            - mongo-data:/data/db
        ports:
            - "27017:27017"

    typesense:
        image: typesense/typesense:26.0
        env_file:
            - path: env/typesense.env.default
              required: true
            - path: env/typesense.env
              required: false
        restart: on-failure
        ports:
            - "8107:8107"
            - "8108:8108"
        entrypoint: ["sh"]
        # https://github.com/docker/compose/issues/9757#issuecomment-1217460695
        command:
            "-c '/opt/typesense-server --api-key=$$TYPESENSE_API_KEY --data-dir=/data --enable-cors'"
        volumes:
            - typesense-data:/data

    gorse:
        image: zhenghaoz/gorse-in-one:0.4
        restart: unless-stopped
        ports:
            - "8088:8088"
        env_file:
            - path: env/gorse.env.default
              required: true
            - path: env/gorse.env
              required: false
        command: >
            -c /etc/gorse/config.toml  --log-path /var/log/gorse/master.log  --cache-path
            /var/lib/gorse/master_cache.data
        volumes:
            - ./config/gorse.dev.toml:/etc/gorse/config.toml:ro
        depends_on:
            - redis
            - postgres
